UNIVERSITY OF TORONTO
UNIVERSITY TRIBUNAL
TRIAL DIVISION
IN THE MATTER charges of academic dishonesty made on February 22, 2010;
AND IN THE MATTER of the University of Toronto Code of Behaviour on Academic
,'vlatters, 1995;
AND 1L'I THE MATTER of the University of Toronto Act, 1971, S.O. 1971, c. 56, as

amended S.O. 1978, c. 88;
BETWEEN:
THE UNIVERSITY OF TORONTO

-ANDX:

iz:

Hearing Date: May 7, 2010
Members of the Panel:

Ms. Julie Hannaford, Barrister and Solicitor, Chair
Professor Louis Florence, Depatiment of Management, Faculty Panel Member
Mr. Sadek Ali, Student Panel Member
Appearances:

Mr. Robert Centa, Assistant Discipline Counsel, Paliare Roland Barristers
Ms. Betty-Ann Campbell, Law Clerk, Paliare Roland Barristers
Mr. Gregory Ko, Articling Sn1dent, Paliare Roland Barristers
Mr. Kante Easley, Instructor for CSC104H1F: The How and Why of Computing
Mr. Yan Zhang, Student in CSC104H1F: The How and Why of Computing
In Attendance:

Ms. Tamara Jones, Academic Integrity Officer (former), Office of Academic Integrity
iv1r. ClnÂ·istopher Lang, Coordinator, Appeals, Discipline and Faculty Grievances

Not in Attendance:

Mr. X

Z

;, the Student

I.

On May 7, 20 I 0, the University Tribunal convened a hearing to address charges
against Mr. Z

- namely that he had obtained unauthorized assistance in

connection with ce1iain coursework in a course called "CSC 104H: The Why and
How of Computing". At the hearing, the Tribunal heard evidence about the
efforts made to contact Mr. Z
engaged to give Mr. Z
and as well, to give ivlr. Z

, and the numerous modes of communication

notice of the charges, and of the pending proceedings,
notice of the substance of the evidence that would

be tendered about both the notice given to him and the evidence that the
University was intending to put forth in regard to the charges. The Tribunal
determined that based on all the evidence about the extensive communications to
Mr. Z

, that he should be regarded as having been "served" and having had

"notice" of the proceedings. Having had no response whatsoever from Mr.
Z

, the Tribunal determined to proceed in his absence. In particular, the

Tribunal found that the University had provided reasonable notice to Mr. Z
of the hearing and that he had declined to participate in it.

FINDINGS OF FACT BY THE TRIBUNAL

2.

At the hearing, the University tendered a number of documents, collectively
marked as Exhibit I. In addition, the University called the evidence of Professor
Kante Easley, and the evidence of Mr. Y

3.

Z

Professor Easley was the instrnctor in the 2008 Fall Session ofCSC 104H. Mr.

X

z

was enrolled in Professor Easley's class.

2

4.

Pati of the requirements for the course included an assignment that was due on
December 3, 2008. This assignment was worth ten percent of the final grade in
the course.

5.

submitted the required assignment on December 3, 2008. It became

Mr. Z

evident to Professor Easley that the assignment contained answers identical to
those submitted by lvlr. Y
Z

Z

who was another student in the class. ivlr. Y

was enrolled in the Fall Session of CSC I 04H, as well. Mr. Y

z

admitted that he and Mr. X

Z

collaborated in formulating the

answers to the questions in assignment number 4.

6.

It is dit1icult to describe the nature of the collaboration unless the assignment and

the answers ofX

z

and Y

Z

's submission are viewed

together.

7.

The compared documents are attached to this set of reasons, along with the
assignment.

8.

The Tribunal was assisted in its analysis and the nature of the collaboration and
the similarities of between the two assignments, by the colour-coded descriptions
of the similarities in the two submissions. It was clear from these documents that
there were substantial and remarkable similarities between the two assignments.

9.

On the basis of the evidence provided by the University, including the documents
that were marked as Exhibit I, the Tribunal was unanimous in its finding of guilt.

3

PENALTY
I.

Mr. Z

committed previous offences while at the University. With respect to

the offences in which he was involved, these reasons include a copy of the
University Tribunal reasons in the matter of charges of academic dishonesty made
on January 5, 2009, against him. In essence, the Tribunal determined, again in the
absence of Mr. Z

that his papers submitted in the course AST25 l consisted

almost entirely of plagiarized material. The Tribunal found that the plagiarism in
that case was "flagrant and serious".

2.

It is notable that Mr. Z

did not attend at the hearing that occuned on

September l 0, 2009, notwithstanding that extensive eff01is were made to bring
the charges and the Notice of Hearing to Mr. Z
3.

,' s attention.

Ms. Betty Ann Campbell, a law clerk at Palaire Roland, testified that "she had
personally attended at the examination facility on McCaul Street, in Toronto, on
March 20, 2009. [Mr. z:

was writing an exam on that date]. Mr. Z

identified himself to her. She then personally served the student with the Notice of
Hearing, the charges and the University's disclosure brief'.
did not attend at that hearing.

4.

Notwithstanding this personal service, Mr. Z

5.

On hearing the evidence called by the University, and on hearing submissions by
discipline counsel, Mr. z:

was found gtiilty of the academic offence of

unauthorized assistance in connection with any fo1m of academic work to section
BJ. I (b) of the Code ofBehaviour on Academic 1'vlatters. The sanctions imposed
were: (a) he shall receive a final grade of zero in the course CSC 104H: The Why

4

and How of Computing; (b) he be suspended from the University from May 4,
2010, until May 3, 2015; (c) the sanction shall be recorded on his academic record
and transcript from the date of the Order until he graduates from the University.

COSTS
6.

That did not end the matter. The Tribunal asked the University to make
submissions on costs - namely, whether costs should be awarded, and, if so, the
appropriate amount of costs, and the terms and conditions related to the payment
of costs. These reasons determine the issue of costs.

7.

The request to the University for submissions on costs emanated from the panel,
and not from the University.

8.

The Tribunal was of the view that it was appropriate to canvass the question of
costs, after hearing of the extensive work that was unde11aken to contact Mr.
Z

9.

, and after considering the cost to the University of giving such notice.

The University of Toronto Code ofBehaviour on Academic 1\.Ja/fers ("Code")
confers jurisdiction on the Tribunal to award costs of proceedings at trial. Section
C.Il.(a) l 7(b) provides:

Where it is considered to be warranted by the circumstances, the chair of a
hearing may in his or her discretion award costs of any proceedings at
trial, and may make orders as to the pat1y or pat1ies to and by whom and
the amounts and manner in which such costs are to be paid.
I 0.

There is, therefore, jurisdiction for the panel, or indeed, the chair alone [in his or
her discretion) to award costs, and there is a broad discretion about the quantum,

5

tenns and conditions related to such costs.

11.

That jurisdiction exists to award costs does not mean that every case is one where
costs ought to be awarded. Rather, the award of costs should relate to the
"circumstances" that would logically call for an award of costs. Such
circumstances should relate to whether a pmty has been obliged to undertake an
extraordinary expenditure of time and money in order to obtain a just resolution
of the particular case.

12.

The Code requires adherence to a standard of fairness, honesty, and integrity, from both the teacher and the student, and the Code provides for penalties for
failing to abide by the standards prescribed.

13.

At the same time, the Code requires that the University adhere to the standards of
fairness in proceedings connected with charges of academic misconduct under the
Code. Those standards require that notice be given, that evidence be tendered,
and that findings of fact, and conclusions about the charges, all proceed in an
environment of utmost fairness and transparency. Obviously, there is a cost to
adhering to the dictates of fairness. The fact that the University is put to this cost
and must proceed in accordance with the highest standards of procedural fairness
- should not be pmt of the consideration of whether costs are ordered. Teachers
and students alike are entitled to the entire spectrnm of procedural fairness
without fear of costs sanctions, and without any expectation that simply adhering
to the requirements of procedural fairness will garner any reward.

14.

It is when a pmiy confounds the process of delivering a fair and transparent
6

process for the determination of a charge that consideration of costs sanctions
should arise, This case is one of such instances.
15,

As set out above, this was not the first time that Mr. z:

had been the subject

of charges and proceedings before the Tribunal. On September 10, 2009, the
University Tribunal heard the case in Mr. z1

's absence and found that he had

committed the academic offence of plagiarism. In that case, the University had
personally served J\,fr, Z

with the notice of hearing and charges. Mr. Z

declined to pai1icipate in any way in the proceeding. The University went to great
lengths to ensure 1\<Ir. Z
16,

was served with notice of those proceedings.

The University also went to great lengths to ensure Nlr. ZI

was served with

these instant proceedings.

17.

And so, the University Tribunal has now convened twice to hear allegations of
academic misconduct against Mr. Z

18,

IfMr. Z.

, He did not attend either hearing.

did not wish to participate in the hearing, all he needed to do was to

provide that infmmation to the University by way of letter or email. Had he done
so, the matter could have proceeded much more expeditiously and without some
of the expenses incurred.

19.

While the Tribunal has a jurisdiction to award costs, the jurisdiction has only been
exercised infrequently. In 2006, in a case called University of Toronto and
P,

D,

(Case 441; April 7, 2007), the University Tribunal made a

costs order against a student In this case, it was not the substance of the charges,

7

or the penalty, that founded the costs order. Rather, it related to the fact that the
student had caused the University to engage significant expense in attempting to
serve the student with notice. Mr. D

was charged with falsifying and

circulating two academic records in November 2003 and January 2004. The
Tribunal found Mr. D

to have committed the offences and recommended

that he be expelled from the University. The Tribunal, at the request of the
University, made an award of costs against the student. In particular, the Tribunal
ordered the student to pay $1,660.96 to the University in compensation for
disbursements incurred by the University to locate and serve the student, who had
evaded service.

20.

Mr.Z

caused the University to expend significant costs to locate him, and the

University has expended this time and effort twice. These circumstances militate
in favour of a costs award. The appropriate amount of costs should be determined
on a principled basis,

21,

There are two "scales" of costs - 011e relates to what is often called "partial
indenmity"; the other relates to "substantial indenmity" - often called
"solicitor/client" costs. Pai1ial indemnity costs allow for part of the costs of the
university to be recovered. Substantial indemnity costs allow for a very
significant proportion of costs to be recovered,

22.

It is arguable that a student who avoids service, or does not respond to notice
properly given, should be prepared to have the full weight of a costs sanction
befall him or her. Such conduct is insensitive to the cost of maintaining an

8

environment of fairness and a high standard of procedural fairness. No doubt,
such a significant cost sanction might well have a deterrence effect in the
University community. That type of sanction does not, however, accord with the
principle of proportionality. Nor does it take into account that the cost to the
University in this case (of serving Mr. Z

and presenting evidence at his

hearing) would have been incuned by the University regardless of whether he
responded or not.

23.

The principles of fairness and propo1iionality suggest that a "punitive" award of
costs (substantial or even full indemnity) should be reserved for cases where there
has been egregious and extraordinary behaviour. It might be reserved for cases
where the party has engaged in conduct that has displayed a profound disrespect
for the process and by extension, the Code. This accords with the principles set
out in l'vuÂ·. K. (Case 1999/00; April 20, 1999), in which the Discipline Appeals
Board adopted the common law principle that an award of costs on a substantial
indemnity basis (formerly called a solicitor-client basis) is only appropriate where
there has been reprehensible, scandalous or outrageous conduct by a party.

24.

The Provost has submitted that there are two different ways to calculate the
appropriate amount of costs to be paid by Mr. Z
order iv1r. Z

First, the Tribunal could

to pay the partial indemnity costs based on the entire costs of the

hearing. Calculated on a pmiial indemnity basis, those costs total $4,677.75.
Altematively, the Tribunal could order Mr. Z

to pay only those incremental

costs directly associated with his failure to participate in the hearing process. It is
not possible to calculate precisely the amount incurred in that respect. However,

9

the Provost's best estimate is that the University incurred $1,200.15 in legal tees
(calculated on a partial indemnity basis) directly due to Mr. zÂ·

's failme to

participate in the hearing process. The Provost requests that the Tribunal order
l'vfr. z

to pay costs to the University fixed in the amount of$1,200.15. The

Provost submits that this amount is reasonable, and docs not include any of the
University's costs associated with organizing the Tribunal hearing, or the
University's internal costs associated with the attempts to contact Mr. Z

at the

divisional level.
25.

The Provost's submissions fairly comb out the costs associated with providing
Mr.Z

with the notice and procedmal fairness to which he is ordinarily

entitled. It is the costs associated with the failure to participate in the hearing that
should be borne by Mr. Z

. Mr. z:

is ordered to pay costs to the

University, fixed at $1200.15, with interest on those costs from the date that this
order is made, to the date of payment, calculated at 2% annually, not
compounded. Mr. Z

is required to pay these costs before he may register at

the University.

Dated at Toronto, this _J;;j__ day ofNovember, 2010

Ms. Julie Hannaford,Tco-Chair

IO

ASSIGNMENT CSC104

CSC104 ASSIGNMENT 4

Due at 7:00p.m. on December 3rd

1. INSTRUCTIONS

In this assignment you will be developing functions that could be used in the development of an online card game. For
each function you should submit:
â¢ A python function with the exact name described below. The functions should perform as specified and be placed
in a file called a4. py.
e Sufficient comments to explain the purpose of your function, and the algorithm you used.

2. USEFUL TIPS

2.1. Nesting Lists. We have lea med to create and manipulate single lists. For this exercise, we will work with lists of
lists. We can nest any number of lists within a list. For example:

Â»> M = ( (0,1, 2, 3), (4, 6, 6, 7), [8, 9, 10, 11) J.
Â»> M[O)
[O, 1, 2, 3]

>Â» M[l)
[4, 6, 6, 7)

Â»> M[il [OJ
4

>Â» M[ll [1)
6

You need to try this out In Wing. For example, try the following:

/<

a = list()
a.append(list()) # create a nev list nested in the list a
a.append(liet()) # create another new list nested in the list a
a,append(list()) # create another new list nested in the list a
print len(a) # print the length of a (it should be 3)
# append items to individual lists within a
a[O) .append("first")
a[O) .append("second")
a(1] .append("third")
a(2) .append("fourth")
a[2J .append("fifth")
a[2) .append("sixth")
#verify length and contents of the lists
print a
print a(O]
print len (a [2])
print a (2)
print len(a(I])
print a(1)

2.2. Random Selection, 1bis assignment will depend on randomly generated hands of cards. There Is a module which
can be used to shuffle a list of items (such as cards). The module name ls random. Below is an example of python code
that uses the random module to shuffle a list.

L~IU,,I, t\:xlil.>NMl'.Nl ~

import random# put this line at tho top of your a4,py file
>>>test_list = (6,6,7,8,9)
Â»>random, shuffle ( t'est_list)
>>>print test_list()
(6, 5, 9, 7, 8)

You can remove the last element of a list with the pop () function:

Ki

>>>test_list = [5,6,7,8,9)
>>>x = test_list,pop()
Â»>print x

f@1

>>>print test_list()

H'Â·

9

(6, 6, 7, 8]

2.3. Cards and Hands. For the purposes of our program, we will represent our deck of cards as:
deck =i [ \

'2c'

'3c'

'4c'

'6c 1

'5c'

1

7c'

18c'

'9c'

'Tc 1

'Jc'

'Kc', 'Ac', \

'Qc'

2h' ' '3h' ' 1 4b' ' 1 6h' ' '6b' ' '7h' ' '8h' ' 1 9h' ' 'Th' ' 'Jh' ' 'Qh' ' 'Kh'
'Ah' \
1 2s I ' '3s' ' '4s 1 ' '6s' ' 1 6s 1 ' 1 7s' ' 1 8a' ' 1 9S I ' 1 Ts 1 ' 'Js' ' 'Qs' ' 1 Ks' ' 1 As 1
1 \

1

I

1 3d'
1 Td'
1 9d'
>Jd>
'2d'
'4d'
'7d'
'Qd'
'6d'
'6d'
'8d'
'
'
'
' use the
' backslash
'\ to continue
'
' the next
# note' that we
a' line to
line

)fr!
â¢

'

'Kd'

'

'Ad' )

Each quoted string in the list represents a card in the deck. The first character in each card ls the rank, and the second
character is the suit. An A represents an ace and can be considered low or high (i.e., a 1 or after a king), as required.

I,

Each hand that we wUl deal for our poker game will consist of five cards. We will keep each hand in a separate list. For
example:

!f}J
I,â¢

band1 i::i

:', \j!)q

In situations where we deal more than one hand, we will nest all of the lists which contain a hand in a single list. For
example:

{'-'

hands= (['3d', '4s',

"

(

1

3d',

1

4s',

1

4h',

1

7c', 'Jc')

I

1

4h 1 1 1 7c 1 ,

1

Jc 1 ) , ('Ac', 'Ah', 'As', 'Ad'J 'Ks')]

In this example we have nested two hands, for our game, we could nest up to ten hands.
2.4. Hands.

'"Â·Â·~'Â·Â· 1

.
Royal Flush
This is the best poker hand you can have and consists of a 10, Jack, Queen, King and Ace of the
same suit.
Ex: Tc, Jc, Qc, Kc, Ac

,.,..

â¢ â¢& Â·- Â·~

iI.e, .e,

Straight Flush
Five cards, all of the same suit that are in sequence,
Ex: 6c, 7c, 8c, 9c,Tc

â¢â¢â¢
Â·~

0

'

I.~
: â¢ ~I,,,,â¢.,._
..
I.
â¢~ 'I ;rf.t, â¢

â¢â¢â¢â¢ i ....

. AAA

Full House
Three cards of e ual
~~'.~ef,uaTI rani. J:::i:d~do different cards
, c, d, 5s,Sd
and a pair).

â¦
â¦

!â¦

tâ¦ â¢

~ â¢â¢ â¦
â¦
â¦

â¦

â¦

-Â°'' â¦â¢ â¦;' â¢ â¦f â¦ â¦ &

i~ â¦ fâ¦â¢â¢

;

!

i â¢â¢â¢

-

~

IL.._~-!VJ

Flush
Any
five cards f h Â·
Ex: As
'I!
t e same suit.
, s, 9s, 5s, 2s

Â°

:â¢

aâ¦

"'Â°'

Straight
Five cards of mixed
Ex: 9c, Th, Js, Qd, ~uits, In sequence.

..

iâ¦ â¢ :

â¢â¢â¢ !
:

â¢â¢â¢ !
6 ;

Three-Of-A-Kind
Any three cards f
Ex: 9c, 9h, 9s
o equal rank.

~.

Â·.Â·').
,;/:
~:- i

~;

i
t-'

!

,. .
,

:1Â·'Â· .Â·
l .

ti

I ':~

, . .,,._

â¦

Two Pair
Two
cards
of equal ran k and a different tw
of equal
rank
Ex: 5d
2h.
o cards
IS,
5
,2S
I

tâ¦ â¢

â¦

â¦

â¢
â¢â¢â¢ â¢ - â¢
g ,

â¦

â¦;,

I

aâ¢

2

â¦

1
â¢

4

1-gÂ·.
Iâ¢'

'.

CSC104 ASSIGNMENT 4

ill,, i
I

I

(

â¢.

â¢

;i .,. â¢ ;__. :
Pair
Two cards of equal rank.
Ex: Js, Jh

.

.

' ...

X la

r

3. THE FUNCTIONS

You must create the following functions in your program file a4,py. They must perform exactly as described, That is,
if you are asked to return a list, return a list, if you are asked to return a nested list, return a nested list, Use the cards
provided in U,e starter code. You may create additional lists for your own purposes, but the cards must be represented
as In the deck description provided. Do NOT print out the returned values within the functions that you create. To test
the functions, you may print out the values.
Function
deal_hands(num_hands)

,Jj

ii)

royal_flush(hand)
straight_flush(hand)
four_of_a_kind(hand)

-~-

1:','

foll_house(hand)

t~?t

'l'
I.:

'

flush (hand)
straight (hand)
three_of_a_kind(hand)
tyo_pair (hand)
pair(hand)

â¢~:d

Ti I

,â¢ .; j

tu.
l.;,,I
... I

Specification
Accept the number of hands to be dealt (num_hands), and use the random
module to deal that number of hands. Each hand must contain five cards. No
card across all of the hands may be duplicated. For example, if one hand has
the three of spades (3s), that hand cannot contain another three of spades, and
no other hand that is dealt may contain the three of spades,
Return the hands dealt as lists nested within a single list, where each list is a
hand. If there Is only one hand, It must be nested as well.
Accept a hand (a list containing five cards), Return True if the hand is a royal
flush. Otherwise, return False.
Accept a hand, Return True if the hand is a straight flush, Otherwise, return
False.
Accept a hand. Return True if the hand ls a four of a !<ind, Otherwise; return
False,
Accept a hand, Return True if the hand Is a full house. Otherwise, return
False,
Accept a hand, Return True If the hand Is a flush. Otherwise, return False,
Accept a hand. Return True if 111e hand is a straight. Otherwise, return False.
Accept a hand. Return True lf the hand is a three of a kind, Otherwise, return
False.
Accept a hand. Return True If the hand is a two pair, Otherwise, return False.
Accept a hand. Return True If the hand is a pair, Otherwise, return False.

COMPARED DOCUMENTS

z..,,.------1---

'_L â¢ OiJ

greywolf:/u/csc104h/lall/submlt% cat\ql;~Jii,4ta4.py
import random
deck= ['2c','3c','4c','5c','6c','7c','8c','9c','Tc','Jc','Qc','Kc','Ac',\
'2h','3h','4h','5h','6h','7h','8h','9h','Th','Jh','Qh','Kh','Ah',\
'2s','3s','4s','5s','6s','7s','8s','9s','Ts','Js','Qs','Ks','As',\
'2d','3d','4d','5d','6d','7d','8d','9d111Td 1, 1Jd 1,'Qd 1, 1Kd','Ad 1,]

def deai_hands(num_hands):
random.shuffle(deck)
# the random numbers extracted from the 'deck' were shuffled
hand_llst = II
#pick up the required cards from deck
for I In range(num_hands):
hand.Jlst.append(decl<[5 * I : 5 â¢ (i + 1)I)
return hand_llst

def royal_.flush(hand):
royal_flush = False
value_Jlst"' II
for c in hand:
value_llst.append(c(O])
If check_sarne_sult(hand):
value_list.sort()
//right values contains In the list shows the list
If value_llst === ['A', 'J', 'K', 'Q', 'T']:
royaUlush = True
return royalJlush

tlreturn True if hand is a full house and False otherwise
def lull_house(hand):

numerlzed_llst = card_numerlzer(hand)
pair"' False
three_of_a_kind = False
tlthls part checks if there are at exactly three cards of equal value In
tithe hand, It Is similar to the three_oLa_klnd function
for I In range(2, 15):
counter= 0
for c In numerlzed__llst:
If i == c:
counter+= 1
If counter :=i= 3:
three_oLa_klnd = True
tlthls part checks If there are at exactly two cards of equal value In
t/1he hand, It Is similar to the three_of_a,__klnd function
for i in range(2, 15):
counter= O
for c In numerized_llst:
lfl==o:
counter+= 1
if counter == 2:
pair= True
If pair and three__of_a_klnd:
return True
else:
return False
#return True If hand is a flush and False otherwise
def flush(hand):
return cheok_same_sult(hand)
I/return True If hand Is a straight and False otherwise
def stralght(hand):
stralg ht = True

def two_palr(l1and):
two_palr'" False
if four_of_a_klnd(hand):
two_pair"" True
ellf palr_counter(hand) ""'' 2:
two_pair = True
return two_palr
#return True If hand Is a pair.otherwise return False
def palr(hand):
palr_count = palr_counter(hand)
If pair_count > O:
return True
else:
return False

'(

2_

s_Jb.,.,,!::.s'<Y''
greywolf:/u/csc104h/fall/submit% cat[cazt
Import random
def deal_hands(num_hands):

I~

~ 3 :oc)
~~4/a4.py

deck= ('2c','3c','4c','5c','6c','7c','8c','9c','Tc','Jc','Qc','Kc','Ac',\
'2h','3h','4h','5h','6h','7h','Bh','9h','Th','Jh','Qh','Kh','Ah',\
'2s','3s','4s','5s','6s','7s','8s','9s','Ts','Js','Qs','Ks','As',\
'2d','3d','4d','5d','6d','7d','8d','9d','Td','Jd','Qd','Kd','Ad',)
//this contains 52 cards
random.shuffle( decl<)
hand_llst = []
#this part creates the required amount of hands by slicing the shuffled deck
for I In range(num_hands):
hand_llst.append(deck[5 â¢ I : 5 * (I + 1)])
return handJlst
def royaLflush(hand):
royal_flush = False
value_llst = II
for a In hand:
value_llst.append(a[O])
if check_same_suit(hand):
value_llst.sort()
#1hls Is how the order of the 11st
If value_llst == ['A', 'J', 'K', 'Q', 'T']:
royaL{lush = True
return royalJlush
def stralght_flush(hand):
result= False
if check_same_sult(hand):
result = True
a_list = card_numerlzer(hand)
#1his part is prepared for the following

#the hand, it Is similar to the three_ot_a_klnd function
for I in range(2, 15):
counter = O
for x In numerlzed_llst:
If I== x:
counter += Â·1

if counter== 3:
three_of_a_klnd = True
#this part checks If there are at exactly two cards have equal value in
I/the hand, It Is similar to the three_of_a_l<lnd function
for i In range(2, 15):
counter= 0
for x In numerlzed_llst:
If I== x:
counter+= 1

If counter=" 2:
pair= True

If pair and three_of_a_klnd:
return True
else:
return False
I/return True If hand is a flush and otherwise False
def flush(hand):
return check_same_sult(hand)
def stralght(hand):
straight = True
numerlzed_llst = card_numerizer(hand)
numerized_llst.sort()
#this part checks If It Is a straight hand
for i In range(4):
If numerlzed_llst[4] I= 14:
If numerlzed_llst[i] I= numerized_llst[I + 1] - 1:
straight = False
elif numerized_list[4] == 14:

If palccount > o:
return True
else:
return False

